" Personal .vimrc file
" Maintained by Ramces Chirino <http://chirinosky.com>

" ==================================================
" IMPORTANT SETTINGS
" ==================================================
" Update runtime path
set rtp+=~/.dotfiles/vim/bundle/Vundle.vim/
set rtp+=~/.dotfiles/vim/bundle/powerline/powerline/bindings/vim

" --------------------------
" Vundle (Must be on top of this file)
" --------------------------
set nocompatible              " Disable vi compatibility
filetype off                  " Disable file type detection (Enabled later)

" Initialize vundle
call vundle#rc("~/.dotfiles/vim/bundle/")

" Plugins for Vundle to manage
Bundle 'gmarik/Vundle.vim'
Bundle 'w0ng/vim-hybrid'
Bundle 'scrooloose/nerdtree'
Bundle 'Lokaltog/powerline'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/nerdcommenter'
Bundle 'tmhedberg/SimpylFold'
Bundle 'scrooloose/syntastic'
" snipmate dependencies
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'honza/vim-snippets'

" Version-specific python plugins
if has('python')
"Bundle 'Valloric/YouCompleteMe'
elseif has('python3')
Bundle 'davidhalter/jedi-vim'
endif

" ==================================================
" General
" ==================================================
set t_Co=256                        " enable 256 colors
set mouse=a                         " enable mouse for all modes
let mapleader = ","                 " personal shortcut key
try
    colorscheme hybrid              " use default color scheme if
catch /^Vim\%((\a\+)\)\=:E185/      " the one set is not found
    colorscheme default
endtry
filetype plugin indent on           " detect file and indent
syntax on                           " syntax highlighting
set laststatus=2                    " Always show status line
set number                          " display line numbers
set ruler                           " always show cursor position
set cursorline                      " line on cur location
set title                           " change terminal's title
set nowrap                          " don't wrap text on load
set wildmenu                        " better command-line completion
set hlsearch                        " highlight searches
set ignorecase                      " case-insensitive search
set smartcase                       " case-sensitive if first letter is capital
set nofoldenable                    " don't fold code when loading
set textwidth=99

" Highlight column
set colorcolumn=100
highlight ColorColumn ctermbg=233

" Use <Ctrl>+h/j/k/l to navigate between splits
map <c-h> <c-w>h
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l

" ==================================================
" Editing
" ==================================================
set expandtab                               " tabs/indents use spaces
set list listchars=tab:▷⋅,trail:⋅,nbsp:⋅    " Show tab character and trailing whitespace
set backspace=indent,eol,start              " Allow backspace over everything
set showmatch                               " Show matching parenthesis
set pastetoggle=<F2>                        " Toggle to prevent auto-indents

" Improved indentation
vnoremap < <gv
vnoremap > >gv

" Detect shorthand markdown files
au BufNewFile,BufReadPost *.md set filetype=markdown

" ==================================================
" Plugins
" ==================================================
" --------------------------
" Jedi
" --------------------------
" Disable preview doc during autocomplete
let g:jedi#auto_vim_configuration=0
set completeopt=menuone,longest

" --------------------------
" Nerd Tree
" --------------------------
map <F3> :NERDTreeToggle<CR>
let NERDTreeChDirMode=2         " CWD when switching nodes
let NERDTreeIgnore=['\.vim$','\~$','\.pyc$','\.swp$']
let NERDTreeSortOrder=['^__\.py$','\/$','*','\.swp$','\~$']
let NERDTreeShowBookmarks=1

" --------------------------
" Snipmate
" --------------------------
" default mappings interfere with ycm & jedi
imap <leader><Tab> <Plug>snipMateNextOrTrigger
smap <leader><Tab> <Plug>snipMateNextOrTrigger

" --------------------------
" Syntastic
" --------------------------
let g:syntastic_auto_loc_list=1             " open location window when error detected
let g:syntastic_aggregate_errors=1          " Report on all checkers at once
let g:syntastic_loc_list_height=5           " Lines to display
let g:syntastic_python_checkers=['pyflakes', 'pep8', 'python']
